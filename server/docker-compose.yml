version: '3.8'

services:
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}" ]
    volumes:
      - redis_data:/data
    deploy:
      resources:
        limits:
          memory: 256M
    networks:
      - rrms-network
  
  mysql:
    image: mysql:latest
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD={DB_PASSWORD}
      - MYSQL_DATABASE={DB_NAME}
      - MYSQL_USER={DB_ROOT_USERNAME}
      - MYSQL_PASSWORD={DB_PASSWORD}
    deploy:
      resources:
        limits:
          memory: 512M
    networks:
      - rrms-network
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.24
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - ./elasticsearch/data:/usr/share/docker/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    deploy:
      resources:
        limits:
          memory: 1G
    networks:
      - rrms-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.24
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5602:5601"
    depends_on:
      - elasticsearch
    deploy:
      resources:
        limits:
          memory: 512M
    networks:
      - rrms-network
  
  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.24
    environment:
      - xpack.monitoring.enabled=false
      - ELASTICSEARCH_HOST=http://elasticsearch:9200
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:rw
      - ./logstash/pipeline:/usr/share/logstash/pipeline:rw
    ports:
      - "5044:5044"
      - "5000:5000"
      - "9600:9600"
    depends_on:
      - elasticsearch
    deploy:
      resources:
        limits:
          memory: 512M
    networks:
      - rrms-network

  rrms:
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - rrms-network
    depends_on:
      - mysql
      - redis
      - elasticsearch
      - kibana
      - logstash
    restart: always
    ports:
      - "8080:8080"
    environment:
      # Application Config
      - PORT={PORT}
      # Database Config
      - DB_URL={DB_URL}
      - DB_USERNAME={DB_ROOT_USERNAME}
      - DB_PASSWORD={DB_PASSWORD}
      # Redis Config
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_USERNAME=${REDIS_USERNAME}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      # Cors Config
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      # CloudFlare Captcha Config
      - SECRET_KEY_CAPTCHA=${SECRET_KEY_CAPTCHA}
      # JWT Config
      - JWT_SIGNER=${JWT_SIGNER}


volumes:
  redis_data:
    driver: local
  mysql_data:
    driver: local

networks:
  rrms-network:
    driver: bridge